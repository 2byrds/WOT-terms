/**
 * Any CSS included here will be global. The classic template
 * bundles Infima by default. Infima is a CSS framework designed to
 * work well for content-centric websites.
 */

/* You can override the default Infima variables here. */
:root {
  --ifm-color-primary: #337dbe;
  --ifm-color-primary-dark: #29784c;
  --ifm-color-primary-darker: #277148;
  --ifm-color-primary-darkest: #205d3b;
  --ifm-color-primary-light: #33925d;
  --ifm-color-primary-lighter: #359962;
  --ifm-color-primary-lightest: #3cad6e;
  --ifm-code-font-size: 95%;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.1);
}

/* For readability concerns, you should choose a lighter palette in dark mode. */
[data-theme='dark'] {
  --ifm-color-primary: #25c2a0;
  --ifm-color-primary-dark: #21af90;
  --ifm-color-primary-darker: #1fa588;
  --ifm-color-primary-darkest: #1a8870;
  --ifm-color-primary-light: #29d5b0;
  --ifm-color-primary-lighter: #32d8b4;
  --ifm-color-primary-lightest: #4fddbf;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.3);
}

.hero {
  background: #337dbe;
}

.hero__image {
  max-width: 10em !important;
  animation: rotation 12s infinite linear;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}

.homepage--heading {
  text-align: center;
}

/* TEXT ANIMATION HOME PAGE */
/* https: //codepen.io/kilianso/pen/baEWJm */
.pattern_wrap {
  position: relative;
}

.pattern,
.character {
  pointer-events: none;
  display: inline-block;
  padding: 0.1rem;
  transition: opacity 0.1s ease-in-out;
}

.pattern {
  position: absolute;
  left: 0;
  opacity: 0;
}

.character {
  /* text-transform: uppercase; */
  opacity: 0;
}

.pattern_line:before {
  content: '\2502';
}

.pattern_circle:before {
  content: '\2022';
}

.pattern_square:before {
  content: '\220E';
}

/**
 * Levels
 */
.show-level-buttons-info img {
  max-width: 2em;
  margin-right: 0.5em;
  float: left;
}

/* clear float */
.show-level-buttons-info:after {
  content: '';
  display: table;
  clear: both;
}

/**
 * Video
 */
/* TODO: better settings for width and height */
.youtube-video {
  display: block;
  border: 1px solid pink;
  margin: 0 auto 1em;
  /* width: 300px; */
  /* width: 300px; */
  /* height: 200px; */
}

video {
  width: 100%;
}
video[poster] {
  object-fit: cover;
}
.video-inline {
  background: #eef9fd;
  border: 3px solid #b2beea;
  border-radius: 7px;
  width: 10em;
  float: right;
  margin: 0 1em 1em;
  padding: 0.5em;
}

.subtitlecontainer {
  font-size: 1.5em;
}

.video-test {
  border: 1px solid #222;
  margin: 1em 0 2em;
}

/**
* Cross Links
*/
.cross-link {
  color: rgb(212, 109, 136);
}

/**
* Tables
*/
table th {
  writing-mode: vertical-lr;
}

table td,
table th {
  vertical-align: top;
}

/*table th:nth-child(7),
table td:nth-child(7),
table th:nth-child(8),
table td:nth-child(8) {
  /~ width: 20px !important; ~/
  min-width: 5em;
  overflow: hidden;

  /~ These are technically the same, but use both ~/
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /~ This is the dangerous one in WebKit, as it breaks things wherever ~/
  word-break: break-all;
  /~ Instead use this non-standard one: ~/
  word-break: break-word;

  /~ Adds a hyphen where the word breaks, if supported (No Blink) ~/
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}*/
